OK_FORMAT = True

test = {   'name': 'q6-5',
    'points': 3,
    'suites': [   {   'cases': [   {'code': '>>> assert ans65_c == 0.95\n', 'hidden': False, 'locked': False},
                                   {   'code': '>>> ax = ans65_graph.get_axes()[0]\n'
                                               '>>> points = ax.collections[0].get_offsets()\n'
                                               '>>> assert np.array_equal(points.data[:100], np.array([[12704.0, 3869.0], [17657.0, 5296.0], [18568.0, 5708.0], [25974.0, 9158.0], [22167.0, 7037.0], '
                                               '[17827.0, 5699.0], [32661.0, 14008.0], [34053.0, 15121.0], [34229.0, 14960.0], [35220.0, 15273.0], [37795.0, 15734.0], [24718.0, 7730.0], [21601.0, '
                                               '6361.0], [19693.0, 6435.0], [33774.0, 14854.0], [34168.0, 14974.0], [35635.0, 14946.0], [36479.0, 15316.0], [24461.0, 8597.0], [19026.0, 5905.0], '
                                               '[33575.0, 14687.0], [33487.0, 14691.0], [33745.0, 14616.0], [34880.0, 14581.0], [37064.0, 15130.0], [24750.0, 7848.0], [20523.0, 6038.0], [33025.0, '
                                               '14231.0], [34336.0, 14828.0], [33506.0, 14507.0], [33592.0, 14136.0], [35997.0, 14769.0], [24555.0, 8113.0], [20480.0, 6063.0], [33164.0, 14447.0], '
                                               '[34045.0, 14993.0], [33062.0, 14350.0], [34422.0, 14645.0], [36845.0, 15211.0], [25759.0, 8178.0], [21796.0, 6283.0], [19021.0, 6062.0], [33854.0, '
                                               '14907.0], [33407.0, 14731.0], [33464.0, 14571.0], [36097.0, 14490.0], [25284.0, 8297.0], [20051.0, 5793.0], [32499.0, 14380.0], [32572.0, 14189.0], '
                                               '[33687.0, 14613.0], [34241.0, 14793.0], [36064.0, 15047.0], [24902.0, 7760.0], [20891.0, 6039.0], [34247.0, 14560.0], [33754.0, 14634.0], [33365.0, '
                                               '14600.0], [33330.0, 14323.0], [35561.0, 15138.0], [25313.0, 8222.0], [19723.0, 5687.0], [31950.0, 13971.0], [34436.0, 14919.0], [33530.0, 14207.0], '
                                               '[33545.0, 14223.0], [36427.0, 14762.0], [25844.0, 8356.0], [20563.0, 5883.0], [33092.0, 14498.0], [35567.0, 14423.0], [37023.0, 14027.0], [34852.0, '
                                               '14280.0], [37468.0, 14954.0], [26363.0, 8219.0], [22179.0, 6372.0], [34478.0, 14437.0], [34475.0, 14909.0], [37504.0, 15781.0], [21576.0, 6996.0], '
                                               '[35705.0, 13977.0], [27294.0, 8374.0], [22910.0, 6586.0], [34559.0, 14366.0], [35835.0, 14509.0], [35533.0, 14324.0], [36088.0, 14295.0], [37313.0, '
                                               '14589.0], [26141.0, 7801.0], [22435.0, 6415.0], [33724.0, 13863.0], [34535.0, 14110.0], [35188.0, 14509.0], [36290.0, 14602.0], [38387.0, 15213.0], '
                                               '[26794.0, 8749.0], [21286.0, 6459.0], [36099.0, 15724.0], [36512.0, 15848.0], [37564.0, 15182.0]]))\n',
                                       'hidden': False,
                                       'locked': False}],
                      'scored': True,
                      'setup': '',
                      'teardown': '',
                      'type': 'doctest'}]}
